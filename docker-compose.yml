version: "3.9"

services:
  proxy:
    container_name: proxy
    build:
      dockerfile: Dockerfile
      context: ./proxy
    restart: always
    ports:
      - 3050:80
    networks:
      - frontend
      - backend
    depends_on:
      - db
      - api
      - web

  db:
    container_name: db
    image: mongo:4.4.6
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_USER_USERNAME: "${MONGO_USER_USERNAME}"
      MONGO_USER_PASSWORD: "${MONGO_USER_PASSWORD}"
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_ROOT_PASSWORD}"
      MONGO_DATABASE_DEV: "${MONGO_DATABASE_DEV}"
      MONGO_DATABASE_TEST: "${MONGO_DATABASE_TEST}"
    volumes:
      - ./backend/db/data:/data/db
      - ./backend/db/entrypoint:/docker-entrypoint-initdb.d
    expose:
      - 27017
    networks:
      - backend
    logging:
      driver: none

  api:
    container_name: api
    build:
      dockerfile: Dockerfile
      context: ./backend/app
    environment:
      MONGO_URI: "${MONGO_URI}"
      MONGO_USER_USERNAME: "${MONGO_USER_USERNAME}"
      MONGO_USER_PASSWORD: "${MONGO_USER_PASSWORD}"
      MONGO_DATABASE_DEV: "${MONGO_DATABASE_DEV}"
    volumes:
      - ./backend/app:/app
      - /app/node_modules
    expose:
      - 5000
    networks:
      - backend

  web:
    container_name: web
    build:
      dockerfile: Dockerfile
      context: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    expose:
      - 3000
    ports:
      - 3000:3000
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
